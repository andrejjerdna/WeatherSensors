// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/greet.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Ozon256.WeatherSensors.DataProcessorClient {
  public static partial class Sensors
  {
    static readonly string __ServiceName = "Greeter.Sensors";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ozon256.WeatherSensors.DataProcessorClient.ActionMessage> __Marshaller_Greeter_ActionMessage = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ozon256.WeatherSensors.DataProcessorClient.ActionMessage.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ozon256.WeatherSensors.DataProcessorClient.SensorsDataCollectionResponse> __Marshaller_Greeter_SensorsDataCollectionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ozon256.WeatherSensors.DataProcessorClient.SensorsDataCollectionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ozon256.WeatherSensors.DataProcessorClient.GetSensorByGuidRequest> __Marshaller_Greeter_GetSensorByGuidRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ozon256.WeatherSensors.DataProcessorClient.GetSensorByGuidRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ozon256.WeatherSensors.DataProcessorClient.SensorDataResponse> __Marshaller_Greeter_SensorDataResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ozon256.WeatherSensors.DataProcessorClient.SensorDataResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ozon256.WeatherSensors.DataProcessorClient.AddSensorRequest> __Marshaller_Greeter_AddSensorRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ozon256.WeatherSensors.DataProcessorClient.AddSensorRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ozon256.WeatherSensors.DataProcessorClient.RemoveSensorRequest> __Marshaller_Greeter_RemoveSensorRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ozon256.WeatherSensors.DataProcessorClient.RemoveSensorRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Ozon256.WeatherSensors.DataProcessorClient.ActionMessage, global::Ozon256.WeatherSensors.DataProcessorClient.SensorsDataCollectionResponse> __Method_GetSensorsData = new grpc::Method<global::Ozon256.WeatherSensors.DataProcessorClient.ActionMessage, global::Ozon256.WeatherSensors.DataProcessorClient.SensorsDataCollectionResponse>(
        grpc::MethodType.DuplexStreaming,
        __ServiceName,
        "GetSensorsData",
        __Marshaller_Greeter_ActionMessage,
        __Marshaller_Greeter_SensorsDataCollectionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Ozon256.WeatherSensors.DataProcessorClient.GetSensorByGuidRequest, global::Ozon256.WeatherSensors.DataProcessorClient.SensorDataResponse> __Method_GetSensorByGuid = new grpc::Method<global::Ozon256.WeatherSensors.DataProcessorClient.GetSensorByGuidRequest, global::Ozon256.WeatherSensors.DataProcessorClient.SensorDataResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSensorByGuid",
        __Marshaller_Greeter_GetSensorByGuidRequest,
        __Marshaller_Greeter_SensorDataResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Ozon256.WeatherSensors.DataProcessorClient.SensorsDataCollectionResponse> __Method_GetAllSensors = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Ozon256.WeatherSensors.DataProcessorClient.SensorsDataCollectionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllSensors",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_Greeter_SensorsDataCollectionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Ozon256.WeatherSensors.DataProcessorClient.AddSensorRequest, global::Ozon256.WeatherSensors.DataProcessorClient.SensorDataResponse> __Method_AddSensor = new grpc::Method<global::Ozon256.WeatherSensors.DataProcessorClient.AddSensorRequest, global::Ozon256.WeatherSensors.DataProcessorClient.SensorDataResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddSensor",
        __Marshaller_Greeter_AddSensorRequest,
        __Marshaller_Greeter_SensorDataResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Ozon256.WeatherSensors.DataProcessorClient.RemoveSensorRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_RemoveSensor = new grpc::Method<global::Ozon256.WeatherSensors.DataProcessorClient.RemoveSensorRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveSensor",
        __Marshaller_Greeter_RemoveSensorRequest,
        __Marshaller_google_protobuf_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Ozon256.WeatherSensors.DataProcessorClient.GreetReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for Sensors</summary>
    public partial class SensorsClient : grpc::ClientBase<SensorsClient>
    {
      /// <summary>Creates a new client for Sensors</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public SensorsClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Sensors that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public SensorsClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected SensorsClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected SensorsClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncDuplexStreamingCall<global::Ozon256.WeatherSensors.DataProcessorClient.ActionMessage, global::Ozon256.WeatherSensors.DataProcessorClient.SensorsDataCollectionResponse> GetSensorsData(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSensorsData(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncDuplexStreamingCall<global::Ozon256.WeatherSensors.DataProcessorClient.ActionMessage, global::Ozon256.WeatherSensors.DataProcessorClient.SensorsDataCollectionResponse> GetSensorsData(grpc::CallOptions options)
      {
        return CallInvoker.AsyncDuplexStreamingCall(__Method_GetSensorsData, null, options);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ozon256.WeatherSensors.DataProcessorClient.SensorDataResponse GetSensorByGuid(global::Ozon256.WeatherSensors.DataProcessorClient.GetSensorByGuidRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSensorByGuid(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ozon256.WeatherSensors.DataProcessorClient.SensorDataResponse GetSensorByGuid(global::Ozon256.WeatherSensors.DataProcessorClient.GetSensorByGuidRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSensorByGuid, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ozon256.WeatherSensors.DataProcessorClient.SensorDataResponse> GetSensorByGuidAsync(global::Ozon256.WeatherSensors.DataProcessorClient.GetSensorByGuidRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSensorByGuidAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ozon256.WeatherSensors.DataProcessorClient.SensorDataResponse> GetSensorByGuidAsync(global::Ozon256.WeatherSensors.DataProcessorClient.GetSensorByGuidRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSensorByGuid, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ozon256.WeatherSensors.DataProcessorClient.SensorsDataCollectionResponse GetAllSensors(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllSensors(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ozon256.WeatherSensors.DataProcessorClient.SensorsDataCollectionResponse GetAllSensors(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllSensors, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ozon256.WeatherSensors.DataProcessorClient.SensorsDataCollectionResponse> GetAllSensorsAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllSensorsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ozon256.WeatherSensors.DataProcessorClient.SensorsDataCollectionResponse> GetAllSensorsAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllSensors, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ozon256.WeatherSensors.DataProcessorClient.SensorDataResponse AddSensor(global::Ozon256.WeatherSensors.DataProcessorClient.AddSensorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddSensor(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ozon256.WeatherSensors.DataProcessorClient.SensorDataResponse AddSensor(global::Ozon256.WeatherSensors.DataProcessorClient.AddSensorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddSensor, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ozon256.WeatherSensors.DataProcessorClient.SensorDataResponse> AddSensorAsync(global::Ozon256.WeatherSensors.DataProcessorClient.AddSensorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddSensorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ozon256.WeatherSensors.DataProcessorClient.SensorDataResponse> AddSensorAsync(global::Ozon256.WeatherSensors.DataProcessorClient.AddSensorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddSensor, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty RemoveSensor(global::Ozon256.WeatherSensors.DataProcessorClient.RemoveSensorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveSensor(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty RemoveSensor(global::Ozon256.WeatherSensors.DataProcessorClient.RemoveSensorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveSensor, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> RemoveSensorAsync(global::Ozon256.WeatherSensors.DataProcessorClient.RemoveSensorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveSensorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> RemoveSensorAsync(global::Ozon256.WeatherSensors.DataProcessorClient.RemoveSensorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveSensor, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override SensorsClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new SensorsClient(configuration);
      }
    }

  }
}
#endregion
